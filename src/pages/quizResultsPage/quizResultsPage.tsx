import React from "react";
import { useNavigate, useParams } from "react-router-dom";
import "./quizResultsPage.scss";

const QuizResultsPage = () => {
  const navigate = useNavigate();
  const { quizId } = useParams();
  // Dummy results data
  const quizResults = {
    QuizResultsId: 1,
    QuizId: 1,
    StartTime: new Date("2024-06-22T10:00:00"),
    EndTime: new Date("2024-06-22T10:15:00"),
    UserId: 1,
    totalQuestions: 3,
    correctAnswers: 2,
    wrongAnswers: 1,
    score: 67,
    timeTaken: "15:32",
  };

  const wrongAnswersData = [
    {
      id: "q2",
      question:
        "‡∂ö‡∑ñ‡∂©‡∂∫‡∂ö ‡∂Ö‡∂π ‡∂ú‡∑ô‡∂©‡∑í 25‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑î‡∂´‡∑è. ‡∂Ö‡∂∏‡∑ä‡∂∏‡∑è ‡∂Ö‡∂π ‡∂∫‡∑î‡∑Ç ‡∑Ñ‡∂Ø‡∂±‡∑ä‡∂± 8‡∂ö‡∑ä ‡∂ë‡∑Ö‡∑í‡∂∫‡∂ß ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è. ‡∂ö‡∑ñ‡∂©‡∂∫‡∑ö ‡∂≠‡∑Ä‡∂∏‡∂≠‡∑ä ‡∂Ö‡∂π ‡∂ú‡∑ô‡∂©‡∑í ‡∂ö‡∑ì‡∂∫‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑ö‡∂Ø?",

      correctAns: "17",
      explanation:
        "8 ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑É‡∑î ‡∂ö‡∑ñ‡∂©‡∂∫‡∑ö ‡∂≠‡∑Ä‡∂∏‡∂≠‡∑ä ‡∂Ö‡∂π ‡∂ú‡∑ô‡∂©‡∑í ‡∂ö‡∑ì‡∂∫‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑ö‡∂Ø‡∑ê‡∂∫‡∑í ‡∂î‡∂∂ ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫‡∑í. ‡∂ë‡∂∂‡∑ê‡∑Ä‡∑í‡∂±‡∑ä,\n 25‡∂±‡∑ä 8 ‡∂Ö‡∂©‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±: \n 25 ‚àí 8 = 17 \n‡∂ö‡∑ñ‡∂©‡∂∫‡∑ö ‡∂â‡∂≠‡∑í‡∂ª‡∑í‡∑Ä ‡∂á‡∂≠‡∑í ‡∂Ö‡∂π ‡∂ú‡∑ô‡∂©‡∑í 17‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑ö.",
    },
  ];

  const correctAnswersData = [
    {
      id: "q1",
      question:
        "‡∂±‡∑í‡∂∏‡∂Ω‡∑ä ‡∑Ö‡∂ü ‡∂ª‡∑î‡∂¥‡∑í‡∂∫‡∂Ω‡∑ä 500‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑î‡∂´‡∑è. ‡∂ë‡∂∫‡∑è ‡∂ª‡∑î‡∂¥‡∑í‡∂∫‡∂Ω‡∑ä 320‡∂ö‡∂ß ‡∂¥‡∑ê‡∂±‡∑ä‡∑É‡∂Ω‡∑ä ‡∂¥‡∑ô‡∂ß‡∑ä‡∂ß‡∑í‡∂∫‡∂ö‡∑ä ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è. ‡∂ë‡∂∫‡∑è‡∂ß ‡∂â‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∂Ω‡∑ä‡∂Ω‡∑í ‡∂ö‡∑ì‡∂∫‡∂ö‡∑ä ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑Ä‡∂Ø?",

      correctAns: "180",
      explanation:
        "‡∂¥‡∑ê‡∂±‡∑ä‡∑É‡∂Ω‡∑ä ‡∂¥‡∑ô‡∂ß‡∑ä‡∂ß‡∑í‡∂∫ ‡∂∏‡∑í‡∂Ω‡∂Ø‡∑ì ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑É‡∑î ‡∂±‡∑í‡∂∏‡∂Ω‡∑ä ‡∑É‡∂≠‡∑î‡∑Ä ‡∂ö‡∑ú‡∂¥‡∂∏‡∂´ ‡∂∏‡∑î‡∂Ø‡∂Ω‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑ö‡∂Ø‡∑ê‡∂∫‡∑í ‡∂î‡∂∂ ‡∑É‡∑ú‡∂∫‡∑è ‡∂∂‡∑ê‡∂Ω‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫. ‡∂ë‡∂∂‡∑ê‡∑Ä‡∑í‡∂±‡∑ä,\n" +
        " ‡∂î‡∑Ñ‡∑î ‡∑É‡∂≠‡∑î‡∑Ä ‡∂≠‡∑í‡∂∂‡∑ñ ‡∂∏‡∑î‡∂Ø‡∂Ω‡∑í‡∂±‡∑ä ‡∂¥‡∑ê‡∂±‡∑ä‡∑É‡∂Ω‡∑ä ‡∂¥‡∑ô‡∂ß‡∑ä‡∂ß‡∑í‡∂∫‡∑ö ‡∂¥‡∑í‡∂ª‡∑í‡∑Ä‡∑ê‡∂∫ ‡∂Ö‡∂©‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±:\n" +
        "500 ‚àí 320 = 180 \n ‡∂±‡∑í‡∂∏‡∂Ω‡∑ä ‡∑É‡∂≠‡∑î‡∑Ä ‡∂ª‡∑î‡∂¥‡∑í‡∂∫‡∂Ω‡∑ä 180 ‡∂ö‡∑ä ‡∂â‡∂≠‡∑í‡∂ª‡∑í‡∑Ä ‡∂á‡∂≠.",
    },

    {
      id: "q3",
      question:
        "‡∂∂‡∑É‡∑ä ‡∂ª‡∂Æ‡∂∫‡∂ö ‡∂Ü‡∑É‡∂± 40‡∂ö‡∑ä ‡∂á‡∂≠. ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä 27 ‡∂Ø‡∑ô‡∂±‡∑ô‡∂ö‡∑ä ‡∑Ä‡∑è‡∂©‡∑í ‡∑Ä‡∑ì ‡∑É‡∑í‡∂ß‡∑í‡∂≠‡∑í. ‡∂≠‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑ì ‡∂Ø‡∑ô‡∂±‡∑ô‡∂ö‡∑î‡∂ß ‡∂∂‡∑É‡∑ä ‡∂ª‡∂Æ‡∂∫‡∂ß ‡∂±‡∑ê‡∂ü‡∑ì ‡∑Ä‡∑è‡∂©‡∑í ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂Ø?",

      correctAns: "13",
      explanation:
        "‡∂≠‡∑Ä‡∂∏‡∂≠‡∑ä ‡∑Ñ‡∑í‡∑É‡∑ä ‡∂Ü‡∑É‡∂± ‡∂ö‡∑ì‡∂∫‡∂ö‡∑ä ‡∂≠‡∑í‡∂∂‡∑ö‡∂Ø‡∑ê‡∂∫‡∑í ‡∂î‡∂∂ ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∂≠ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫. ‡∂ë‡∂∂‡∑ê‡∑Ä‡∑í‡∂±‡∑ä, ‡∂∏‡∑î‡∑Ö‡∑î ‡∂Ü‡∑É‡∂± ‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è‡∑Ä‡∑ô‡∂±‡∑ä ‡∑Ä‡∑è‡∂©‡∑í ‡∑Ä‡∑ì ‡∑É‡∑í‡∂ß‡∑í‡∂± ‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∂∫‡∑í‡∂±‡∑ä ‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è‡∑Ä ‡∂Ö‡∂©‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±: \n40 ‚àí 27 = 13 \n‡∂≠‡∑Ä‡∂≠‡∑ä 13 ‡∂Ø‡∑ô‡∂±‡∑ô‡∂ö‡∑î‡∂ß ‡∂±‡∑ê‡∂ü‡∑ì ‡∑Ä‡∑è‡∂©‡∑í ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫.",
    },
  ];

  const handleViewCategory = (category: string) => {
    navigate(`/quiz-review/${quizId}/${category}`);
  };

  const getScoreColor = (score) => {
    if (score >= 80) return "#28a745";
    if (score >= 60) return "#ffc107";
    return "#dc3545";
  };

  const getPerformanceMessage = (score) => {
    if (score >= 80) return "Excellent work!";
    if (score >= 60) return "Good job!";
    return "Keep practicing!";
  };

  return (
    <div className="quiz-results-page">
      <div className="results-container">
        <header className="results-header">
          <h1>Quiz Complete!</h1>
          <p className="quiz-title">General Knowledge Quiz #1</p>
        </header>

        <div className="score-summary">
          <div
            className="score-circle"
            style={{ borderColor: getScoreColor(quizResults.score) }}
          >
            <span
              className="score-number"
              style={{ color: getScoreColor(quizResults.score) }}
            >
              {quizResults.score}%
            </span>
            <span className="score-label">Score</span>
          </div>
          <p
            className="performance-message"
            style={{ color: getScoreColor(quizResults.score) }}
          >
            {getPerformanceMessage(quizResults.score)}
          </p>
        </div>

        <div className="results-grid">
          <div className="result-card total">
            <div className="card-icon">üìä</div>
            <div className="card-content">
              <h3>Total Questions</h3>
              <span className="card-number">{quizResults.totalQuestions}</span>
            </div>
            <button
              className="view-btn"
              onClick={() => handleViewCategory("all")}
            >
              View All
            </button>
          </div>

          <div className="result-card correct">
            <div className="card-icon">‚úÖ</div>
            <div className="card-content">
              <h3>Correct Answers</h3>
              <span className="card-number">{quizResults.correctAnswers}</span>
            </div>
            <button
              className="view-btn"
              onClick={() => handleViewCategory("correct")}
            >
              Review
            </button>
          </div>

          <div className="result-card wrong">
            <div className="card-icon">‚ùå</div>
            <div className="card-content">
              <h3>Wrong Answers</h3>
              <span className="card-number">{quizResults.wrongAnswers}</span>
            </div>
            <button
              className="view-btn"
              onClick={() => handleViewCategory("wrong")}
            >
              Review
            </button>
          </div>
        </div>

        <div className="quiz-stats">
          <div className="stat-item">
            <span className="stat-label">Time Taken:</span>
            <span className="stat-value">{quizResults.timeTaken}</span>
          </div>
          <div className="stat-item">
            <span className="stat-label">Started:</span>
            <span className="stat-value">
              {quizResults.StartTime.toLocaleTimeString()}
            </span>
          </div>
          <div className="stat-item">
            <span className="stat-label">Completed:</span>
            <span className="stat-value">
              {quizResults.EndTime.toLocaleTimeString()}
            </span>
          </div>
        </div>

        <div className="action-buttons">
          <button
            className="btn secondary"
            onClick={() => navigate("/quiz-list")}
          >
            Back to Quizzes
          </button>
          <button
            className="btn primary"
            onClick={() => navigate(`/quiz/${quizId}`)}
          >
            Retake Quiz
          </button>
        </div>
      </div>
    </div>
  );
};

export default QuizResultsPage;
